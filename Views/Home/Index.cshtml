@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model AgriEnergyConnect.ViewModels.HomeDashboardViewModel

@{
    ViewData["Title"] = "Home";
    var user = SignInManager.IsSignedIn(User) ? UserManager.GetUserAsync(User).Result : null;
    var roles = user != null ? UserManager.GetRolesAsync(user).Result : new List<string>();
    bool isFarmer = roles.Contains("Farmer");
    bool isEmployee = roles.Contains("Employee");
}

<div class="container mt-5">
    <h1 class="mb-4 text-center">Welcome to AgriEnergyConnect</h1>

    @if (!SignInManager.IsSignedIn(User))
    {
        <div class="alert alert-info text-center" role="alert">
            Please <a href="/Identity/Account/Login">log in</a> or <a href="/Identity/Account/Register">register</a> to access the system.
        </div>
    }
    else
    {
        <p class="text-center mb-4">Hello, <strong>@user?.UserName</strong>!</p>

        @if (isFarmer)
        {
            <h3 class="text-center mb-3">Your Farmer Dashboard</h3>
            <ul class="list-inline text-center mb-5">
                <li class="list-inline-item mx-3"><a href="/Products/Create" class="btn btn-primary">Add New Product</a></li>
                <li class="list-inline-item mx-3"><a href="/Products/MyProducts" class="btn btn-secondary">View Your Products</a></li>
            </ul>
        }
        else if (isEmployee)
        {
            <h3 class="text-center mb-3">Employee Dashboard</h3>
            <ul class="list-inline text-center mb-5">
                <li class="list-inline-item mx-3"><a href="/Farmers/Create" class="btn btn-primary">Add New Farmer</a></li>
                <li class="list-inline-item mx-3"><a href="/Products/All" class="btn btn-secondary">View All Products</a></li>
                <li class="list-inline-item mx-3"><a href="/Products/Search" class="btn btn-info">Search & Filter Products</a></li>
            </ul>
        }
        else
        {
            <p class="text-center text-danger">Your account does not have an assigned role. Please contact the administrator.</p>
        }
    }

    <div class="card mb-4">
        <div class="card-body text-center">
            <h2>About AgriEnergyConnect</h2>
            <p class="lead">
                AgriEnergyConnect is a comprehensive platform designed to empower farmers and employees by managing farmer profiles and their agricultural products efficiently.
                Farmers can easily add and track their products, while employees can manage farmer data and oversee product inventories with robust search and filtering tools.
            </p>
        </div>
    </div>

    @if (SignInManager.IsSignedIn(User) && Model != null)
    {
        <div class="row mb-4">
            <div class="col-md-6 col-lg-3 mb-4 mb-lg-0">
                <div class="card text-center h-100">
                    <div class="card-body">
                        <div class="mb-2">
                            <i class="fas fa-users fa-3x text-primary"></i>
                        </div>
                        <h5>Total Farmers</h5>
                        <h2>@Model.TotalFarmers</h2>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-lg-3 mb-4 mb-lg-0">
                <div class="card text-center h-100">
                    <div class="card-body">
                        <div class="mb-2">
                            <i class="fas fa-carrot fa-3x text-success"></i>
                        </div>
                        <h5>Total Products</h5>
                        <h2>@Model.TotalProducts</h2>
                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="card h-100">
                    <div class="card-body">
                        <h5>Products by Category</h5>
                        <div class="d-flex flex-wrap mt-3">
                            @if (Model.ProductCategories != null)
                            {
                                @foreach (var category in Model.ProductCategories)
                                {
                                    <span class="badge bg-info text-dark me-2 mb-2">@category.Category: @category.Count</span>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-5">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Recent Products</h5>
                <a asp-controller="Products" asp-action="Index" class="btn btn-outline-primary btn-sm">View All</a>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Farm</th>
                                <th>Production Date</th>
                                <th>Price</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.RecentProducts != null && Model.RecentProducts.Any())
                            {
                                @foreach (var product in Model.RecentProducts)
                                {
                                    <tr class="product-row" style="cursor:pointer" data-id="@product.Id" title="View Details">
                                        <td>@product.Name</td>
                                        <td><span class="badge bg-secondary">@product.Category</span></td>
                                        <td>@product.Farmer?.FarmName</td>
                                        <td>@product.ProductionDate.ToShortDateString()</td>
                                        <td>@product.Price.ToString("C")</td>
                                        <td>
                                            @if (product.IsAvailable)
                                            {
                                                <span class="badge bg-success">Available</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Unavailable</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center py-3">No products found</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productRows = document.querySelectorAll('.product-row');
            productRows.forEach(row => {
                row.addEventListener('click', function () {
                    const productId = this.getAttribute('data-id');
                    window.location.href = `/Products/Details/${productId}`;
                });
            });
        });
    </script>
}

<style>
    .badge {
        font-size: 0.9rem;
        padding: 0.4em 0.7em;
    }
</style>
